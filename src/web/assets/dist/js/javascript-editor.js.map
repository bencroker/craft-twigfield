{"version":3,"file":"js/javascript-editor.js","mappings":";;;;;;;;0HAgCA,SAASA,EAAiBC,EAAWC,GACnC,IAAMC,EAAWC,SAASC,eAAeJ,GACrCK,EAAYF,SAASG,cAAc,OAEvCD,EAAUE,GAAKP,EAAY,iBAC3BK,EAAUG,UAAUC,IAAI,MAAO,cAAe,iCAAkC,SAAU,UAC1FJ,EAAUK,SAAW,EACrBR,EAASS,WAAWC,aAAaP,EAAWH,GAC5CA,EAASW,MAAMC,QAAU,OAEzB,IAAIC,EAASC,EAAAA,OAAAA,OAAqBX,EAAW,CAC3CY,MAAOf,EAASe,MAChBC,SAAU,OACVC,iBAAiB,EAEjBC,YAAa,MACbC,aAAa,EACbC,SAAS,EAETC,qBAAsB,EACtBC,oBAAqB,EAErBC,qBAAqB,EACrBC,UAAU,EACVC,sBAAsB,EACtBC,UAAW,CACTC,SAAU,SACVC,WAAY,QAEdC,SAAU,GACVC,WAAY,yEACZC,QAAS,CACPC,SAAS,KAIb/B,SAASgC,cAAc,cAAcC,iBAAiB,UAAU,SAAUC,GACxEnC,EAASe,MAAQF,EAAOuB,cAG1BC,MAAMC,GAAGC,GAAG,sBAAsB,WAChCvC,EAASe,MAAQF,EAAOuB,mBAGyB,IAAxCI,OAAOC,+BAEhBD,OAAOC,8BAA+B,GAGxC,IACMC,EAAe,WACnB,IAAMC,EAAQ9B,EAAO+B,gBAAgBD,MAC/BE,EAAgBC,KAAKC,IAAI,IAAMlC,EAAOmC,oBAE5C7C,EAAUQ,MAAMsC,OAAhB,UAA4BJ,EAA5B,MACA,KACgB,EACdhC,EAAOqC,OAAO,CAACP,MAAAA,EAAOM,OAAQJ,IAFhC,SAIgB,IAGlBhC,EAAOsC,uBAAuBT,GAC9BA,IA/E6E,KAA5BU,EAAAA,IACjDA,EAAAA,EAA0BZ,OAAOa,wBAGnCC,QAAQC,IAAIH,EAAAA,GA8EZZ,OAAO3C,iBAAmBA,G","sources":["webpack://Buildchain/../src/web/assets/src/js/twigfield.js"],"sourcesContent":["/**\n * Twigfield Craft CMS\n *\n * Provides a twig editor field with Twig & Craft API autocomplete\n *\n * @link      https://nystudio107.com\n * @copyright Copyright (c) 2022 nystudio107\n */\n\n/**\n * @author    nystudio107\n * @package   Twigfield\n * @since     1.0.0\n */\n// Set the __webpack_public_path__ dynamically so we can work inside of cpresources's hashed dir name\n// https://stackoverflow.com/questions/39879680/example-of-setting-webpack-public-path-at-runtime\nif (typeof __webpack_public_path__ !== 'string' || __webpack_public_path__ === '') {\n  __webpack_public_path__ = window.twigfieldBaseAssetsUrl;\n}\n\nconsole.log(__webpack_public_path__);\nimport * as monaco from 'monaco-editor/esm/vs/editor/editor.api';\n\n/* For now, use the default theme\n\nimport editorTheme from 'monaco-themes/themes/Night Owl.json';\n\nmonaco.editor.defineTheme('night-owl', editorTheme);\nmonaco.editor.setTheme('night-owl');\n*/\n\n// Create the editor\nfunction makeMonacoEditor(elementId, fieldType) {\n  const textArea = document.getElementById(elementId);\n  let container = document.createElement('div');\n  // Make a sibling div for the Monaco editor to live in\n  container.id = elementId + '-monaco-editor';\n  container.classList.add('p-2', 'box-content', 'monaco-editor-background-frame', 'w-full', 'h-full');\n  container.tabIndex = 0;\n  textArea.parentNode.insertBefore(container, textArea);\n  textArea.style.display = 'none';\n  // Create the Monaco editor\n  let editor = monaco.editor.create(container, {\n    value: textArea.value,\n    language: 'twig',\n    automaticLayout: true,\n    // Disable sidebar line numbers\n    lineNumbers: 'off',\n    glyphMargin: false,\n    folding: false,\n    // Undocumented see https://github.com/Microsoft/vscode/issues/30795#issuecomment-410998882\n    lineDecorationsWidth: 0,\n    lineNumbersMinChars: 0,\n    // Disable the current line highlight\n    renderLineHighlight: false,\n    wordWrap: true,\n    scrollBeyondLastLine: false,\n    scrollbar: {\n      vertical: 'hidden',\n      horizontal: 'auto',\n    },\n    fontSize: 14,\n    fontFamily: 'SFMono-Regular, Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\n    minimap: {\n      enabled: false\n    },\n  });\n  // Before the form is submitted, copy the changes from the editor to the field\n  document.querySelector(\"#main-form\").addEventListener(\"submit\", function (e) {\n    textArea.value = editor.getValue();\n  });\n  // Handle keyboard shortcuts too via beforeSaveShortcut\n  Craft.cp.on('beforeSaveShortcut', () => {\n    textArea.value = editor.getValue();\n  });\n  // Get the autocompletion items\n  if (typeof window.monacoAutocompleteItemsAdded !== 'undefined') {\n    //getCompletionItemsFromEndpoint(fieldType);\n    window.monacoAutocompleteItemsAdded = true;\n  }\n  // Custom resizer to always keep the editor full-height, without needing to scroll\n  let ignoreEvent = false;\n  const updateHeight = () => {\n    const width = editor.getLayoutInfo().width;\n    const contentHeight = Math.min(1000, editor.getContentHeight());\n    //container.style.width = `${width}px`;\n    container.style.height = `${contentHeight}px`;\n    try {\n      ignoreEvent = true;\n      editor.layout({width, height: contentHeight});\n    } finally {\n      ignoreEvent = false;\n    }\n  };\n  editor.onDidContentSizeChange(updateHeight);\n  updateHeight();\n}\n\nwindow.makeMonacoEditor = makeMonacoEditor;\n\nexport default makeMonacoEditor;\n"],"names":["makeMonacoEditor","elementId","fieldType","textArea","document","getElementById","container","createElement","id","classList","add","tabIndex","parentNode","insertBefore","style","display","editor","monaco","value","language","automaticLayout","lineNumbers","glyphMargin","folding","lineDecorationsWidth","lineNumbersMinChars","renderLineHighlight","wordWrap","scrollBeyondLastLine","scrollbar","vertical","horizontal","fontSize","fontFamily","minimap","enabled","querySelector","addEventListener","e","getValue","Craft","cp","on","window","monacoAutocompleteItemsAdded","updateHeight","width","getLayoutInfo","contentHeight","Math","min","getContentHeight","height","layout","onDidContentSizeChange","__webpack_public_path__","twigfieldBaseAssetsUrl","console","log"],"sourceRoot":""}